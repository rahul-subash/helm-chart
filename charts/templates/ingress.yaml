{{- if .Values.ingress.enabled -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: boldbi-ingress
  labels:
    {{- include "boldbi.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers: "4 256k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
    nginx.ingress.kubernetes.io/large-client-header-buffers: "4 16k"
    nginx.ingress.kubernetes.io/fastcgi-buffers: "16 16k"
    nginx.ingress.kubernetes.io/fastcgi-buffer-size: "32k"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: "boldbi.k8s.pod.id"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: 200m
    nginx.ingress.kubernetes.io/server-snippet: |      
      client_max_body_size 200m;
      set $boldbi_namespace "{{ .Values.namespace }}";
      
      location ~* "^/bi/api(/|$)(.*)" {
        set $namespace      $boldbi_namespace;
        set $ingress_name   "boldbi-ingress";
        set $service_name   "";
        set $service_port   "";
        set $location_path  "/biapi6005/bi/api(/|${literal_dollar})(.*)";
        rewrite_by_lua_block {
                lua_ingress.rewrite({
                        force_ssl_redirect = false,
                        ssl_redirect = true,
                        force_no_ssl_redirect = false,
                        use_port_in_redirects = false,
                })
                balancer.rewrite()
                plugins.run()
        }
        header_filter_by_lua_block {
                lua_ingress.header()
                plugins.run()
        }
        body_filter_by_lua_block {
        }
        log_by_lua_block {
                balancer.log()
                monitor.call()
                plugins.run()
        }
        port_in_redirect off;
        set $balancer_ewma_score -1;
        set $proxy_upstream_name "${boldbi_namespace}-bi-api-service-6005";
        set $proxy_host          $proxy_upstream_name;
        set $pass_access_scheme  $scheme;
        set $pass_server_port    $server_port;
        set $best_http_host      $http_host;
        set $pass_port           $pass_server_port;
        set $proxy_alternative_upstream_name "";
        proxy_set_header Host                   $best_http_host;
        proxy_set_header                        Upgrade           $http_upgrade;
        proxy_set_header                        Connection        $connection_upgrade;
        proxy_set_header X-Request-ID           $req_id;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $best_http_host;
        proxy_set_header X-Forwarded-Port       $pass_port;
        proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
        proxy_set_header X-Scheme               $pass_access_scheme;
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
        proxy_set_header Proxy                  "";
        proxy_connect_timeout                   300s;
        proxy_send_timeout                      300s;
        proxy_read_timeout                      300s;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_max_temp_file_size                1024m;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
        rewrite "(?i)/biapi6005/bi/api(/|$)(.*)" /$2 break;
        proxy_pass http://upstream_balancer;
        proxy_redirect                          off;
      }
      
      location ~* "^/bi/jobs(/|$)(.*)" {
        set $namespace      $boldbi_namespace;
        set $ingress_name   "boldbi-ingress";
        set $service_name   "";
        set $service_port   "";
        set $location_path  "/bijobs6006/bi/jobs(/|${literal_dollar})(.*)";
        rewrite_by_lua_block {
                lua_ingress.rewrite({
                        force_ssl_redirect = false,
                        ssl_redirect = true,
                        force_no_ssl_redirect = false,
                        use_port_in_redirects = false,
                })
                balancer.rewrite()
                plugins.run()
        }
        header_filter_by_lua_block {
                lua_ingress.header()
                plugins.run()
        }
        body_filter_by_lua_block {
        }
        log_by_lua_block {
                balancer.log()
                monitor.call()
                plugins.run()
        }
        port_in_redirect off;
        set $balancer_ewma_score -1;
        set $proxy_upstream_name "${boldbi_namespace}-bi-jobs-service-6006";
        set $proxy_host          $proxy_upstream_name;
        set $pass_access_scheme  $scheme;
        set $pass_server_port    $server_port;
        set $best_http_host      $http_host;
        set $pass_port           $pass_server_port;
        set $proxy_alternative_upstream_name "";
        proxy_set_header Host                   $best_http_host;
        proxy_set_header                        Upgrade           $http_upgrade;
        proxy_set_header                        Connection        $connection_upgrade;
        proxy_set_header X-Request-ID           $req_id;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $best_http_host;
        proxy_set_header X-Forwarded-Port       $pass_port;
        proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
        proxy_set_header X-Scheme               $pass_access_scheme;
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
        proxy_set_header Proxy                  "";
        proxy_connect_timeout                   300s;
        proxy_send_timeout                      300s;
        proxy_read_timeout                      300s;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_max_temp_file_size                1024m;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
        rewrite "(?i)/bijobs6006/bi/jobs(/|$)(.*)" /$2 break;
        proxy_pass http://upstream_balancer;
        proxy_redirect                          off;
      }
      
      location ~* "^/bi/designer(/|$)(.*)" {
        set $namespace      $boldbi_namespace;
        set $ingress_name   "boldbi-ingress";
        set $service_name   "";
        set $service_port   "";
        set $location_path  "/bidataservice6007(/|${literal_dollar})(.*)";
        rewrite_by_lua_block {
                lua_ingress.rewrite({
                        force_ssl_redirect = false,
                        ssl_redirect = true,
                        force_no_ssl_redirect = false,
                        use_port_in_redirects = false,
                })
                balancer.rewrite()
                plugins.run()
        }
        header_filter_by_lua_block {
                lua_ingress.header()
                plugins.run()
        }
        body_filter_by_lua_block {
        }
        log_by_lua_block {
                balancer.log()
                monitor.call()
                plugins.run()
        }
        port_in_redirect off;
        set $balancer_ewma_score -1;
        set $proxy_upstream_name "${boldbi_namespace}-bi-dataservice-service-6007";
        set $proxy_host          $proxy_upstream_name;
        set $pass_access_scheme  $scheme;
        set $pass_server_port    $server_port;
        set $best_http_host      $http_host;
        set $pass_port           $pass_server_port;
        set $proxy_alternative_upstream_name "";
        proxy_set_header Host                   $best_http_host;
        proxy_set_header                        Upgrade           $http_upgrade;
        proxy_set_header                        Connection        $connection_upgrade;
        proxy_set_header X-Request-ID           $req_id;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $best_http_host;
        proxy_set_header X-Forwarded-Port       $pass_port;
        proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
        proxy_set_header X-Scheme               $pass_access_scheme;
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
        proxy_set_header Proxy                  "";
        proxy_connect_timeout                   300s;
        proxy_send_timeout                      300s;
        proxy_read_timeout                      300s;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_max_temp_file_size                1024m;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
        rewrite "(?i)/bidataservice6007(/|$)(.*)" /$2 break;
        proxy_pass http://upstream_balancer;
        proxy_redirect                          off;
      }
      
      location ~* "^/bi(/|$)(.*)" {
        set $namespace      $boldbi_namespace;
        set $ingress_name   "boldbi-ingress";
        set $service_name   "";
        set $service_port   "";
        set $location_path  "/biweb6004/bi(/|${literal_dollar})(.*)";
        rewrite_by_lua_block {
                lua_ingress.rewrite({
                        force_ssl_redirect = false,
                        ssl_redirect = true,
                        force_no_ssl_redirect = false,
                        use_port_in_redirects = false,
                })
                balancer.rewrite()
                plugins.run()
        }
        header_filter_by_lua_block {
                lua_ingress.header()
                plugins.run()
        }
        body_filter_by_lua_block {
        }
        log_by_lua_block {
                balancer.log()
                monitor.call()
                plugins.run()
        }
        port_in_redirect off;
        set $balancer_ewma_score -1;
        set $proxy_upstream_name "${boldbi_namespace}-bi-web-service-6004";
        set $proxy_host          $proxy_upstream_name;
        set $pass_access_scheme  $scheme;
        set $pass_server_port    $server_port;
        set $best_http_host      $http_host;
        set $pass_port           $pass_server_port;
        set $proxy_alternative_upstream_name "";
        proxy_set_header Host                   $best_http_host;
        proxy_set_header                        Upgrade           $http_upgrade;
        proxy_set_header                        Connection        $connection_upgrade;
        proxy_set_header X-Request-ID           $req_id;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $best_http_host;
        proxy_set_header X-Forwarded-Port       $pass_port;
        proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
        proxy_set_header X-Scheme               $pass_access_scheme;
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
        proxy_set_header Proxy                  "";
        proxy_connect_timeout                   300s;
        proxy_send_timeout                      300s;
        proxy_read_timeout                      300s;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_max_temp_file_size                1024m;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
        rewrite "(?i)/biweb6004/bi(/|$)(.*)" /$2 break;
        proxy_pass http://upstream_balancer;
        proxy_redirect                          off;        
      }
      
      location ~* "^/api(/|$)(.*)" {
        set $namespace      $boldbi_namespace;
        set $ingress_name   "boldbi-ingress";
        set $service_name   "";
        set $service_port   "";
        set $location_path  "/idapi6001/api(/|${literal_dollar})(.*)";
        rewrite_by_lua_block {
                lua_ingress.rewrite({
                        force_ssl_redirect = false,
                        ssl_redirect = true,
                        force_no_ssl_redirect = false,
                        use_port_in_redirects = false,
                })
                balancer.rewrite()
                plugins.run()
        }
        header_filter_by_lua_block {
                lua_ingress.header()
                plugins.run()
        }
        body_filter_by_lua_block {
        }
        log_by_lua_block {
                balancer.log()
                monitor.call()
                plugins.run()
        }
        port_in_redirect off;
        set $balancer_ewma_score -1;
        set $proxy_upstream_name "${boldbi_namespace}-id-api-service-6001";
        set $proxy_host          $proxy_upstream_name;
        set $pass_access_scheme  $scheme;
        set $pass_server_port    $server_port;
        set $best_http_host      $http_host;
        set $pass_port           $pass_server_port;
        set $proxy_alternative_upstream_name "";
        proxy_set_header Host                   $best_http_host;
        proxy_set_header                        Upgrade           $http_upgrade;
        proxy_set_header                        Connection        $connection_upgrade;
        proxy_set_header X-Request-ID           $req_id;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $best_http_host;
        proxy_set_header X-Forwarded-Port       $pass_port;
        proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
        proxy_set_header X-Scheme               $pass_access_scheme;
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
        proxy_set_header Proxy                  "";
        proxy_connect_timeout                   300s;
        proxy_send_timeout                      300s;
        proxy_read_timeout                      300s;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_max_temp_file_size                1024m;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
        rewrite "(?i)/idapi6001/api(/|$)(.*)" /$2 break;
        proxy_pass http://upstream_balancer;
        proxy_redirect                          off;
      }
      
      location ~* "^/ums(/|$)(.*)" {
        set $namespace      $boldbi_namespace;
        set $ingress_name   "boldbi-ingress";
        set $service_name   "";
        set $service_port   "";
        set $location_path  "/idums6002/ums(/|${literal_dollar})(.*)";
        rewrite_by_lua_block {
                lua_ingress.rewrite({
                        force_ssl_redirect = false,
                        ssl_redirect = true,
                        force_no_ssl_redirect = false,
                        use_port_in_redirects = false,
                })
                balancer.rewrite()
                plugins.run()
        }
        header_filter_by_lua_block {
                lua_ingress.header()
                plugins.run()
        }
        body_filter_by_lua_block {
        }
        log_by_lua_block {
                balancer.log()
                monitor.call()
                plugins.run()
        }
        port_in_redirect off;
        set $balancer_ewma_score -1;
        set $proxy_upstream_name "${boldbi_namespace}-id-ums-service-6002";
        set $proxy_host          $proxy_upstream_name;
        set $pass_access_scheme  $scheme;
        set $pass_server_port    $server_port;
        set $best_http_host      $http_host;
        set $pass_port           $pass_server_port;
        set $proxy_alternative_upstream_name "";
        proxy_set_header Host                   $best_http_host;
        proxy_set_header                        Upgrade           $http_upgrade;
        proxy_set_header                        Connection        $connection_upgrade;
        proxy_set_header X-Request-ID           $req_id;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $best_http_host;
        proxy_set_header X-Forwarded-Port       $pass_port;
        proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
        proxy_set_header X-Scheme               $pass_access_scheme;
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
        proxy_set_header Proxy                  "";
        proxy_connect_timeout                   300s;
        proxy_send_timeout                      300s;
        proxy_read_timeout                      300s;
        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;
        proxy_max_temp_file_size                1024m;
        proxy_request_buffering                 on;
        proxy_http_version                      1.1;
        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
        rewrite "(?i)/idums6002/ums(/|$)(.*)" /$2 break;
        proxy_pass http://upstream_balancer;
        proxy_redirect                          off;
      } 
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if eq (split ":" .Values.appBaseUrl)._0 "https" }}
  tls:
    - hosts:
      {{- if .Values.ingress.tls }}
      {{- range $host := .Values.ingress.tls.hosts }}
      {{- range $dns := $host.hostNames }}
        - {{ $dns }}
      {{- end }}
      secretName: {{ $host.secretName }}
      {{- end }}
      {{- else }}
        - {{ (split "/" .Values.appBaseUrl)._2 }}
      secretName: {{ .Values.ingress.secretName }}
      {{- end }}
  rules:
    - http: 
  {{- else }}
  rules:
    - host: {{ (split "/" .Values.appBaseUrl)._2 }}
      http:
  {{- end }}
        paths:
          - path: /
            {{- if and .Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ .Release.Name }}-id-web
                port:
                  number: {{ .Values.service.port.idWeb }}
              {{- else }}
              serviceName: id-web-service
              servicePort: {{ .Values.service.port.idWeb }}
              {{- end }}
              
          - path: /idapi{{ .Values.service.port.idApi }}(/|$)(.*)
            {{- if and .Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ .Release.Name }}-id-api
                port:
                  number: {{ .Values.service.port.idApi }}
              {{- else }}
              serviceName: id-api-service
              servicePort: {{ .Values.service.port.idApi }}
              {{- end }}
                  
          - path: /idums{{ .Values.service.port.idUms }}(/|$)(.*)
            {{- if and .Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ .Release.Name }}-id-ums
                port:
                  number: {{ .Values.service.port.idUms }}
              {{- else }}
              serviceName: id-ums-service
              servicePort: {{ .Values.service.port.idUms }}
              {{- end }}
                  
          - path: /biweb{{ .Values.service.port.biWeb }}(/|$)(.*)
            {{- if and .Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ .Release.Name }}-bi-web
                port:
                  number: {{ .Values.service.port.biWeb }}
              {{- else }}
              serviceName: bi-web-service
              servicePort: {{ .Values.service.port.biWeb }}
              {{- end }}
                  
          - path: /biapi{{ .Values.service.port.biApi }}(/|$)(.*)
            {{- if and .Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ .Release.Name }}-bi-api
                port:
                  number: {{ .Values.service.port.biApi }}
              {{- else }}
              serviceName: bi-api-service
              servicePort: {{ .Values.service.port.biApi }}
              {{- end }}
                  
          - path: /bijobs{{ .Values.service.port.biJobs }}(/|$)(.*)
            {{- if and .Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ .Release.Name }}-bi-jobs
                port:
                  number: {{ .Values.service.port.biJobs }}
              {{- else }}
              serviceName: bi-jobs-service
              servicePort: {{ .Values.service.port.biJobs }}
              {{- end }}
                  
          - path: /bidataservice{{ .Values.service.port.biDataService }}(/|$)(.*)
            {{- if and .Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ .Release.Name }}-bi-dataservice
                port:
                  number: {{ .Values.service.port.biDataService }}
              {{- else }}
              serviceName: bi-dataservice-service
              servicePort: {{ .Values.service.port.biDataService }}
              {{- end }}
{{- end }}